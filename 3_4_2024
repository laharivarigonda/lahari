TASK 1
-> Nested if statement 
       Nested if conditions in Java, a decision-making statement that can have multiple branches. See syntax, examples, and code explanations of nested if statements.
       A nested if statement is an if statement that is placed inside another if statement.
       This allows for multiple conditions to be evaluated sequentially, providing more complex decision-making capabilities.
Example:-



import java.util.*; 
import java.lang.*; 
  
class GFG 
{   
    public static void main(String args[]) 
    { 
        int a=10; 
          int b=20; 
        
        if(a==10){ 
  
            if(b!=20){ 
                System.out.println("World Wide Web"); 
            } 
            
            else{ 
                System.out.println("WWW"); 
            } 
        } 
    } 
} 

output:-
WWW


TASK 2

-> When for loop becomes infinite 
   
  An infinite for loop has no termination condition, causing it to iterate indefinitely. 
  This can happen if the termination condition is missing or if the loop's increment/decrement logic prevents the condition from being false.

Example:-

class InfiniteForLoop
{
public static void main (String args[]){
                for(int i=10; i>0; i++){
                System.out.println("Lahari");
   }
 }
}

OUTPUT:-
Lahari
Lahari
Lahari
Lahari
Lahari
.
.
.
.
.
.


3. Finding Prime Numbers upto n. n is an integer


class Prime
{
	public static void main(String arg[])	
	{
	int i,count;
               System.out.print("Enter n value : ");
	Scanner sc=new Scanner(System.in);
	int n=sc.nextInt();
               System.out.println("Prime numbers between 1 to "+n+" are ");
	for(int j=2;j<=n;j++)
	{
	count=0;
	for(i=1;i<=j;i++)
	{
	   if(j%i==0)
	   {
	        count++;        
	   }
	}
	if(count==2)
	       System.out.print(j+"  ");     
	}
	}
}

output:-

Enter n value : 50
Prime numbers between 1 to 50 are
2  3  5  7  11  13  17  19  23  29  31  37  41  43  47


-> task 1:

for loop:
Condition 1:
int i=90;
for(;i>100;i++){}   :- It doesn't enter the loop because the statemmanet is false

Condition 2:
int i=90;
for(;i>100;i--){}   :- It can prints nothing, while complie the statement. The statement is false.

Condition 3:
int i=90;
for(; ;i++){}        :- It can print the infinite in the loop. The for loop cantains only increment statement.

Condition 4:
int i=90;
for(;i<100;i++){}    :-The ouput of statement is it prints 90 to 99.

Condition 5:
int i=90;
for(;i<100;i+=2){}    :- It can print 92 94 96 98 it can increment by 2 every output value.


:-> task 2: int i=23 ==> 2+3=>5 int i=33 ==> 3+3=>6

int i=56 ==>11 => 1+1=> 2
int 456 ==>4+5=> 9+6=> 15 => 1+5=> 6
int 1245 => 1+2=>3+4=>7+5=>12=>1+2=>3



package operators;

public class sumofDigit {

	public static void main(String[] args) {
		int n=19;
		int sum=0;
		int sum1=0;
		while(n>0)
		{
			int rem=n%10;
			sum=sum+rem;
			n=n/10;
		}
		if(sum>9)
		{
			while(sum>0)
			{
				int rem=sum%10;
				sum1=sum1+rem;
				sum=sum/10;
			}
			System.out.println(sum1);
		}
		else
		{
			System.out.println(sum);
		}
	}

}

